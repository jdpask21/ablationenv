    protected AbstractCategoryItemRenderer() {
        this.itemLabelGeneratorList = new ObjectList();
        this.toolTipGeneratorList = new ObjectList();
        this.urlGeneratorList = new ObjectList();
        this.legendItemLabelGenerator
        this.backgroundAnnotations = new ArrayList();
        this.foregroundAnnotations = new ArrayList();
    public void setSeriesItemLabelGenerator(int series,
        setSeriesItemLabelGenerator(series, generator, true);
    public void setSeriesItemLabelGenerator(int series,
        this.itemLabelGeneratorList.set(series, generator);
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void setBaseItemLabelGenerator(
        setBaseItemLabelGenerator(generator, true);
    public void setBaseItemLabelGenerator(
        this.baseItemLabelGenerator = generator;
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void setSeriesToolTipGenerator(int series,
        setSeriesToolTipGenerator(series, generator, true);
    public void setSeriesToolTipGenerator(int series,
        this.toolTipGeneratorList.set(series, generator);
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void setBaseToolTipGenerator(CategoryToolTipGenerator generator) {
        setBaseToolTipGenerator(generator, true);
    public void setBaseToolTipGenerator(CategoryToolTipGenerator generator,
        this.baseToolTipGenerator = generator;
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void setSeriesURLGenerator(int series,
        setSeriesURLGenerator(series, generator, true);
    public void setSeriesURLGenerator(int series,
        this.urlGeneratorList.set(series, generator);
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void setBaseURLGenerator(CategoryURLGenerator generator) {
        setBaseURLGenerator(generator, true);
    public void setBaseURLGenerator(CategoryURLGenerator generator,
        this.baseURLGenerator = generator;
        if (notify) {
            notifyListeners(new RendererChangeEvent(this));
    public void addAnnotation(CategoryAnnotation annotation, Layer layer) {
        if (annotation == null) {
        if (layer.equals(Layer.FOREGROUND)) {
            this.foregroundAnnotations.add(annotation);
            notifyListeners(new RendererChangeEvent(this));
        else if (layer.equals(Layer.BACKGROUND)) {
            this.backgroundAnnotations.add(annotation);
            notifyListeners(new RendererChangeEvent(this));
    public void setLegendItemLabelGenerator(
        if (generator == null) {
        this.legendItemLabelGenerator = generator;
        fireChangeEvent();
    public void setLegendItemToolTipGenerator(
        this.legendItemToolTipGenerator = generator;
        fireChangeEvent();
    public void setLegendItemURLGenerator(
        this.legendItemURLGenerator = generator;
        fireChangeEvent();
    public boolean equals(Object obj) {
        if (obj == this) {
        if (!(obj instanceof AbstractCategoryItemRenderer)) {
        AbstractCategoryItemRenderer that = (AbstractCategoryItemRenderer) obj;
        if (!ObjectUtilities.equal(this.itemLabelGeneratorList,
            return false;
        if (!ObjectUtilities.equal(this.baseItemLabelGenerator,
            return false;
        if (!ObjectUtilities.equal(this.toolTipGeneratorList,
            return false;
        if (!ObjectUtilities.equal(this.baseToolTipGenerator,
            return false;
        if (!ObjectUtilities.equal(this.urlGeneratorList,
            return false;
        if (!ObjectUtilities.equal(this.baseURLGenerator,
            return false;
        if (!ObjectUtilities.equal(this.legendItemLabelGenerator,
            return false;
        if (!ObjectUtilities.equal(this.legendItemToolTipGenerator,
            return false;
        if (!ObjectUtilities.equal(this.legendItemURLGenerator,
            return false;
        if (!ObjectUtilities.equal(this.backgroundAnnotations,
            return false;
        if (!ObjectUtilities.equal(this.foregroundAnnotations,
            return false;
        return super.equals(obj);
